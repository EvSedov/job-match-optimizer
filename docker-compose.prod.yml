version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    image: job-search-optimizer-prod
    container_name: job-search-optimizer-app-prod
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/job_search_optimizer
      - REDIS_URL=redis://cache:6379
      - LOG_LEVEL=info
    depends_on:
      - db
      - cache
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/health']
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15-alpine
    container_name: job-search-optimizer-db-prod
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=job_search_optimizer
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 5

  cache:
    image: redis:7-alpine
    container_name: job-search-optimizer-cache-prod
    command: redis-server --appendonly yes
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  app_logs:
    driver: local
